#!/bin/ash
#
# bismark-cron gives BISmark support for multiple crontab files. Instead of
# requiring packages to add entries directly to the crontab, which is an
# error-prone and very dangerous process, this script lets packages put files in
# /etc/cron.d or /tmp/etc/cron.d. We will periodically read those directories and
# generate a new crontab when there are changes.

# Append this suffix to all crontab lines managed by bismark-cron.
# Do not change this line unless you know what you're doing.
suffix='Managed by bismark-cron'

# Use these two files for temporary storage.
old_crontab=$(mktemp -p /tmp)
new_crontab=$(mktemp -p /tmp)

# Remove temporary files at exit.
trap "rm -f $old_crontab $new_crontab" EXIT

# Get the existing crontab
if ! crontab -l > $old_crontab; then
    echo 'Error listing existing crontab'
    exit 1
fi

# Remove lines belonging to bismark-cron.
grep -v "# ${suffix}\$" $old_crontab > $new_crontab

# Append lines from crontab directories to the new cron.
find /etc/cron.d /tmp/etc/cron.d -type f |              # Find all crontabs.
        xargs awk "{ print \$0, \" # ${suffix}\" }" |   # Add comment on each line.
        sort -u >> $new_crontab                         # Sort all lines for predictability.

# If the old and new crontabs are identical then there's no reason to continue.
if diff -q $old_crontab $new_crontab; then
    exit 0
fi

# Sanity check: make sure bismark-cron will run again.
if ! grep -q 'bismark-cron' $new_crontab; then
    echo 'bismark-cron not found in new crontab!' >&2
    exit 1
fi

# Install the new crontab.
if ! crontab $new_crontab; then
    echo 'Error installing new crontab!'
    exit 1
fi
